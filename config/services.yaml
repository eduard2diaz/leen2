# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    storage_directory: '%env(STORAGE_DIRECTORY)%'
    knp_num_items_per_page: '%env(knp_num_items_per_page)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    diagnostico_plantel_subscriber:
        class: App\EventSubscriber\DiagnosticoPlantelSubscriber
        public: true
        tags:
            - { name: doctrine.event_subscriber,  connection: default }
        arguments: ['@service_container']

    plan_trabajo_subscriber:
        class: App\EventSubscriber\PlanTrabajoSubscriber
        public: true
        tags:
            - { name: doctrine.event_subscriber,  connection: default }
        arguments: ['@service_container']

    control_gastos_subscriber:
        class: App\EventSubscriber\ControlGastosSubscriber
        public: true
        tags:
            - { name: doctrine.event_subscriber,  connection: default }
        arguments: ['@service_container']

    rendicion_cuentas_subscriber:
        class: App\EventSubscriber\RendicionCuentasSubscriber
        public: true
        tags:
            - { name: doctrine.event_subscriber,  connection: default }
        arguments: ['@service_container']

    control_gastos.validator:
        class: App\Validator\ControlGastosValidator
        public: true
        tags:
            - { name: validator.constraint_validator, alias: control_gastos.validator }
        arguments: ['@doctrine']

    proyecto.validator:
        class: App\Validator\ProyectoValidator
        public: true
        tags:
            - { name: validator.constraint_validator, alias: proyecto.validator }
        arguments: ['@doctrine']